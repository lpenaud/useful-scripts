
function help::usage () {
  local -r max_len=72
  local out
  printf -v out "Usage: %s [-h]" "${0}"
  while [ $# -ne 0 ]; do
    if [[ "${1}" =~ ^- ]] || [[ "${1}" =~ \.\.\.$ ]]; then
      printf -v out "%s [%s]" "${out}" "${1}"
    else
      printf -v out "%s %s" "${out}" "${1}"
    fi
    shift
    if [ "${#out}" -ge "${max_len}" ]; then
      printf "%s\n  " "${out}"
      out=""
    fi
  done
  echo "${out}"
}

function help::description () {
  printf "\n%s\n" "${1}"
}

function help::positional_argument () {
  printf "\n%s" "positional arguments:"
  while [ $# -ne 0 ]; do
    if [[ "${1}" =~ ^[A-Z_]+$ ]]; then
      printf "\n  %s" "${1}"
    else
      printf "\b\t        %s" "${1}"
    fi
    shift
  done
  echo ""
}

function help::optional () {
  printf "\n%s\n" "optional arguments:"
}

function help::optional_argument () {
  local -r -i max_len=48
  local -i i start=0
  local -a options
  local var desc
  while [ $# -ne 0 ]; do
    if [[ "${1}" =~ ^- ]]; then
      options+=("${1}")
    elif [[ "${1}" =~ ^[A-Z_]+$ ]]; then
      var="${1}"
    elif [ -z "${desc}" ]; then
      desc="${1}"
    else
      printf -v desc "%s (default: %s)" "${desc}" "${1}"
    fi
    shift
  done
  printf "  %s" "${options[0]}"
  i=1
  while [ "${i}" -lt "${#options[@]}" ]; do
    printf ", %s" "${options[${i}]}"
    (( i++ ))
  done
  printf " %s\n" "${var}"
  while [ "${start}" -lt "${#desc}" ]; do
    printf "\t\t%.${max_len}s\n" "${desc:${start}}"
    (( start += max_len ))
  done
}
