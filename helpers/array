# Require bash 4.4 or above

function array::index_of () {
  local -n index_of=$1
  for i in "${!index_of[@]}"; do
    if [ "${index_of[${i}]}" = "${2}" ]; then
      echo "${i}"
      return 0
    fi
  done
  echo "-1"
  return 1
}

function array::get_last_index () {
  local -n get_last_index=$1
  echo "$(( ${#get_last_index[@]} - 1 ))"
}

function array::get_last_value () {
  local -n get_last_value=$1
  echo "${get_last_value[$(array::get_last_index get_last_value)]}"
}

function array::is_empty () {
	local -n is_empty=$1
	if [ "${#is_empty}" -eq 0 ]; then
		return 0
	fi
	return 1
}

function array::is_not_empty () {
	local -n is_not_empty=$1
	if [ "${#is_not_empty}" -gt 0 ]; then
		return 0
	fi
	return 1
}

# array, value
function array::find_key () {
  local -n find_key=$1
  local key
  for key in "${!find_key[@]}"; do
    if [ "${find_key[${key}]}" = "${2}" ]; then
      echo "${key}"
      return 0
    fi
  done
  return 1
}

function array::clean () {
  local -n clean=$1
  local key
  for key in "${!clean[@]}"; do
    unset clean["${key}"]
  done
}

